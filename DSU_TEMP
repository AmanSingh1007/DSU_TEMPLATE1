class DSU{
   
public:
     vector<int> par,rank,size;
   DSU (int n){
      rank.resize(n+1,0);
      
      par.resize(n+1);
      for(int i=0;i<=n;i++){
          par[i]=i;
      }
      
      size.resize(n+1);
      for(int i=0;i<=n;i++){
          size[i]=1;
      }
   }
       
     int findp(int node){
         
         if (node==par[node])return node;
         return par[node]=findp(par[node]);
     }
     
     void unbyrank(int u,int v){
         int pu=findp(u);
         int pv=findp(v);
         
         if(pu==pv)return;
         if(rank[pu]<rank[pv]){
             par[pu]=pv;
         }
         else if(rank[pu]>rank[pv]){
             par[pv]=pu;
         }
         
         else {
             par[pv]=pu;
             rank[pu]++;
         }
     }
     
     void unbysize(int u,int v) {
          int pu=findp(u);
         int pv=findp(v);
         
         if(pu==pv)return;
         if(size[pu]>size[pv]){
             par[pv]=pu;
             size[pu]+=size[pv];
         }
        else  {
             par[pu]=pv;
             size[pv]+=size[pu];
         }
         
     } 
};
